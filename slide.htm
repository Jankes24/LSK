<!DOCTYPE html>
<html lang="pl">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Slides</title>
        <link rel="icon" href="xd.png">
        <link rel="stylesheet" href="style.css">
        <style>
            body, html {
                margin: 0;
                padding: 0;
                overflow: hidden;
                height: 100%;
                background-color: rgb(148, 148, 148);
                background-image: radial-gradient(rgba(87, 87, 87, 0.1) 60%,rgba(87, 87, 87, 0.4) 92%,rgba(87, 87, 87, 0.6) 100%);
                user-select: none;
                -webkit-user-select: none;
            }
    
            #slides {
                display: flex;
                width: 100%;
                height: 100%;
                transition: transform 1200ms cubic-bezier(.7,0,.5,1.6);
            }
    
            .slide {
                flex: 1 0 100%;
                background-image: radial-gradient(rgba(0, 0, 0, 0) 80%,rgba(218, 189, 255, 0.3) 94%,rgba(218, 189, 255, 0.4) 100%);
            }

            #butt-holder {
                position: relative;			
                bottom: 10vh;
                display: flex;
                background-color: rgb(151, 151, 151);
                border-radius: 8px;
                width: 25%;
                margin: auto;
                justify-content: center;
				border: 1px solid;
            }
            h2{
                text-align: center;
                border: 2px solid;
                border-radius: 10px;
                margin: 2% 8%;
                padding: 2%;
                background-color: rgb(255, 200, 200);
                cursor: pointer;
                transition: 1500ms ease;
            }
			
			h1{
            border-radius: 10px;
            padding-inline: 2%;
			 font-weight: 500;
             width: fit-content;
			 max-width: 90%;
			 margin: auto;
             text-align: center;
             border: 2px black dotted;
             background-color: rgba(217, 204, 255, 0.418);
             margin-top: 1%;
			}
			
			#h1_small{
			font-size: 42px;
			}
			#h1_med{
			font-size: 55px;
			}
			#h1_big{
			font-size: 65px;
			}
			
			p{
             font-family: Arial, Helvetica, sans-serif;
             line-height: 130%;
			 width: 60%;
			 margin: auto;
			 margin-top: 2%;
			 font-size: 25px;
			 padding: 25px;
			 border: solid 2px;
			 border-radius: 10px;
			 background-color: beige;
             font-weight: 500;
             max-height: 60vh;
             overflow-y: auto;
             box-sizing: border-box;
			}
			
			h5{
				font-family:Andale Mono, monospace;
				  font-size: 2vw;
				  background-color: rgb(255, 65, 65);
				  margin: auto;
				  border: 2px solid black;
                  width: 2vw;
                  height: 2vw;
                  max-width: 40px;
                  max-height: 40px;
				  border-radius: 10px;
				  text-align: center;
				  color: rgb(46, 46, 46);
				  font-weight: bolder; 
				  cursor: pointer;  
				 position: fixed;
				 top: 1%;
				 left: 1%;	
                 padding-bottom: .5vw;			  
			  }
			  

            #page{
                border: 2px solid;
                border-radius: 10px;
                margin: 2% 2%;
                padding: 2%;
            }
		@keyframes puls-home-hover {
            0% { transform: scale(1); color: rgb(255, 255, 255); background-color: rgb(0, 0, 0); rotate: 0deg;}
            33% {rotate: 1deg;}
            50% { transform: scale(1.05); background-color: rgb(7, 7, 7); color: rgb(255, 64, 64);}
            66% {rotate: -1deg;}
            100% { transform: scale(1); color: rgb(255, 255, 255); background-color: rgb(0, 0, 0); rotate: 0deg;}
        }

        @keyframes puls-home {
            0% { transform: scale(1); color: rgb(51, 51, 51); background-color: rgb(255, 51, 51); rotate: 0deg;}
            33% {rotate: 1deg;}
            50% { transform: scale(1.05); background-color: rgb(241, 241, 241); color: rgb(255, 45, 45);}
            66% {rotate: -1deg;}
            100% { transform: scale(1); color: rgb(48, 48, 48); background-color: rgb(255, 53, 53); rotate: 0deg;}
        }

            @media screen and (max-width: 600px){
                p{
                    width: 80%;
                    font-size: 4vw;
                    padding: 15px;
                }
                h1{
                    width: 75%;
                }
                #h1_big{
                    font-size: 45px;
                }
                #h1_med{
                    font-size: 5.2vw;
                }
                #h1_small{
                    font-size: 25px;
                }
                h5{
                    font-size: 5vw;
                    top: .5%;
                    left: .5%;
                    width: 5vw;
                    height: 5vw;
                    border: 2px solid;
                    border-radius: 4px;
                }
                #butt-holder {
                position: relative;			
                bottom: 10vh;
                display: flex;
                background-color: rgb(151, 151, 151);
                border-radius: 8px;
                width: 95%;
                margin: auto;
                justify-content: center;
				border: 1px solid;
            }
            h2{
                font-size: 6vw;
                text-align: center;
                border: 2px solid;
                border-radius: 10px;
                padding: 2%;
                background-color: rgb(255, 200, 200);
            }
            }
            @media (min-width: 601px){
                h5:hover{
				animation: puls-home-hover 1s infinite ease-in-out;
			  }
              h2:hover{
                background-color: rgb(0, 0, 0);
                color: rgb(255, 255, 255);
            }
}
        </style>
    </head>
    <body>
        <div class="Down" id="enter_ani"></div>
        <div id="slides">
            <div class="slide" style="background-color: rgb(206, 255, 255);">
			<h1 id="h1_big">Wstęp</h1>
			<p>Nasz projekt prezentuje schemat sieci lokalnej, stosunkowo łatwej eksploatacji i 
			potencjalnym rozwoju. W dobieraniu poszczególnych urządzeń skupialiśmy się na rzetelności i 
			jakości podzespołów, przy relatywnie niskiej cenie.<br><br>Projekt przedstawia całkowicie nową sieć zaprojektowaną od podstaw 
			wraz z wyposażeniem. Sieć obejmuje jedno piętro budynku z sześcioma pomieszczeniami pracy lub do innego użytku, w których znajduje 
			się 36 jednostek centralnych, jedną serwerownię oraz korytarz.</p>
	    </div>
            <div class="slide" style="background-color: rgb(190, 255, 184);">
                <h1 id="h1_med">Inwentaryzacja sprzętu i infrastruktury</h1>
                <p>Budynek nie posiada założonego okablowania strukturalnego. Przy projektowaniu uwzględniliśmy użytek jednego z pomieszczeń na 
                centrum dystrybucyjne sieci. W nim znajdować się będą wszystkie aktywne urządzenia sieciowe, czyli szafa krosownicza, serwer, router,
                firewall itp. Liczba punktów sieciowych obejmuje 36 aktywnych stanowisk roboczych. Dodatkowo w większości pomieszczeń znajdują się
                nadmiarowe gniazda sieciowe, dzięki czemu przy dodawaniu stanowisk komputerowych nie będzie potrzebna przebudowa sieci. Ogólna
                infrastruktura budynku przedstawiona jest na rysunku w zakładce „PROJEKT”. W sumie budynek posiada 6 pomieszczeń przeznaczonych
                do użytku biurowego oraz jedno pomieszczenie sanitarne z WC oraz łazienką. W pomieszczeniu oznaczonym literą „D” umieszczona zostanie
                szafa 19” oraz sprzęt aktywny, będzie tu umieszczone pomieszczenie potocznie zwane „serwerownią”. Jest to punkt dystrybucyjny sieci
                LAN, w nim znajduje się jej serce i mózg – serwer i switch. Niewielkie wymiary tego pomieszczenia są dla nas odpowiednie
                (nie zajmujemy niepotrzebnie większego pomieszczenia). </p>
            </div>
            <div class="slide" style="background-color: rgb(255, 225, 186);">
                <h1 id="h1_big">Cel Projektu</h1>
                <p>Celem funkcjonalnym projektu jest przede wszystkim stworzenie niezawodnej, bezpiecznej, umożliwiającej łatwą, przyszłą rozbudowę,
                nowoczesnej sieci komputerowej. Projekt zakłada umiejscowienie okablowania w korytkach PCV oraz w korycie metalowym znajdującym się pod
                sufitem. Tam gdzie to możliwe przewody będą ukryte ale jednocześnie będzie do nich łatwy dostęp. Okablowanie zostanie tak poprowadzone 
                by nie przekraczać odległości 100m między PC a urządzeniem aktywnym, zgodnie ze standardami oraz tak by nie narazić niepotrzebnie 
                okablowania na zniszczenia. Kable zostaną wyprowadzone w korytkach kablowych dzięki czemu ich przypadkowe uszkodzenie będzie 
                trudniejsze a instalacja nie będzie zaniżać wyglądu pomieszczeń. Każdy kabel zostanie zakończony gniazdkiem sieciowym kat 5e, 
                będzie ono odpowiednio opisane. Punkty abonenckie obejmować będą gniazdko Rj45, gniazdo zasilania oraz telefoniczne.</p>
	    </div>
        <div class="slide" style="background-color: rgb(255, 254, 175);">
            <h1 id="h1_big">Dzieki Za Uwage</h1>
            <p>PATRYK TO ROBIL PROSZE O 6 :)<br>A reszcie jedynki</p>
	    </div>
        </div>
    
        <div id="butt-holder">
            <h2 id="prev">Back</h2>
            <h2 id="page">1/4</h2>
            <h2 id="next">Next</h2>
        </div>
		<h5 id="back">X</h5>
    
        <script>
            const slides = document.getElementById("slides");
            const page = document.getElementById("page");
            page.onclick = function(){
                slides.style.transform = `translateX(-${0}%)`;
                currentIndex = 0;
                page.innerHTML = `${currentIndex + 1}/${maxIndex + 1}`;
            };
            let currentIndex = 0;
            let maxIndex = slides.children.length - 1;
        
            function next() {
                if (currentIndex < maxIndex) {
                    currentIndex++;
                } else {
                    currentIndex = 0;
                }
                slides.style.transform = `translateX(-${currentIndex * 100}%)`;
                page.innerHTML = `${currentIndex + 1}/${maxIndex + 1}`;
            }
        
            function back() {
                if (currentIndex > 0) {
                    currentIndex--;
                } else {
                    currentIndex = maxIndex;
                }
                slides.style.transform = `translateX(-${currentIndex * 100}%)`;
                page.innerHTML = `${currentIndex + 1}/${maxIndex + 1}`;
            }
            document.getElementById("next").addEventListener("click", next);
            document.getElementById("prev").addEventListener("click", back);
        
            document.getElementById("back").addEventListener("click", function(event) {
                enter_ani.className = '';
                enter_ani.className = 'Up';
                history.replaceState(null, null, "index.html");
                setTimeout(function(){
                    window.location.href = "index.html";
                }, 300);
            });
        
            let touchstartX = 0;
            let touchstartY = 0;
            let touchendX = 0;
            let touchendY = 0;
        
            document.addEventListener("touchstart", function(event) {
                touchstartX = event.touches[0].clientX;
                touchstartY = event.touches[0].clientY;
            });
        
            document.addEventListener("touchmove", function(event) {
                touchendX = event.touches[0].clientX;
                touchendY = event.touches[0].clientY;
            });
        
            document.addEventListener("touchend", function() {
                handleGesture();
            });
        
            function handleGesture() {
                const deltaX = touchendX - touchstartX;
                const deltaY = touchendY - touchstartY;
        
                if (Math.abs(deltaX) > Math.abs(deltaY)) {
                    if (deltaX > 0) {
                        back();
                    } else {
                        next();
                    }
                }
            }
        
            document.addEventListener('keydown', recordKey);
            function recordKey(e) {
                    if (e.key == "ArrowLeft"){
                        back();
                    }
                    else if (e.key == "ArrowRight"){
                        next();
                    }
                }
        </script>
    </body>
</html>